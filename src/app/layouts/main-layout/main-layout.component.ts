

































































           path: '/project-management-page/create-project'                title: 'Create Project',            {            },                path: '/project-management-page/projects-list'                title: 'Projects List',            {        children: [        icon: 'folder',        title: 'Project Management',    {    // ...existing menu items...menuItems = [// Add Navigation Link}  }    return this.httpClient.put<project>(`${this.api}/update/projects/${id}`, project);  public updateProject(id: number, project: project): Observable<project> {  }    return this.httpClient.get<project>(`${this.api}/get/projects/${projet_id}`);  public getProjectById(projet_id: number) {  }    return this.httpClient.delete(`${this.api}/delete/projects/${projet_id}`);  public deleteProject(projet_id: number) {  }      return this.httpClient.get<project[]>(`${this.api}/get/projects`);  public getAllProjects(): Observable<project[]> {  }    });      }        'Accept': 'application/json'        'Content-Type': 'application/json',      headers: {    return this.httpClient.post<project>(`${this.api}/save/projects`, Project, {    });      }        delete Project[key];      if (Project[key] === undefined) {    Object.keys(Project).forEach(key => {    // Remove any undefined or null values    console.log('Service sending data:', JSON.stringify(Project));  public createProject(Project: any): Observable<project> {  constructor(private httpClient: HttpClient) {}  api = 'http://localhost:8040';export class ProjectManagementService {})  providedIn: 'root'@Injectable({import { Observable } from 'rxjs';import { HttpClient } from '@angular/common/http';import { project } from '../models/project.model'; // Update with the correct path to your Project modelimport { Injectable } from '@angular/core';